{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\Portfolio\\\\parvesh-portfolio\\\\src\\\\components\\\\cursor\\\\Cursor.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useRef, useMemo } from 'react';\nimport './Cursor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cursor = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const coords = useMemo(() => ({\n    x: 0,\n    y: 0\n  }), []); // Memoize the initialization of 'coords'\n\n  const colors = useMemo(() => [\"#7c7979\", \"#7c7979\", \"#7c7979\", \"#7c7979\", \"#7c7979\", \"#7c7979\", \"#7c7979\", \"#7c7979\", \"#7c7979\", \"#7c7979\", \"#7c7979\", \"#7c7979\", \"#7c7979\", \"#7c7979\", \"#7c7979\", \"#7c7979\", \"#7c7979\", \"#7c7979\", \"#7c7979\", \"#7c7979\", \"#7c7979\", \"#7c7979\"], []); // Memoize the initialization of 'colors'\n\n  const circlesRef = _s(useRef(_s(colors.map(_s(() => {\n    _s();\n    return useRef(null);\n  }, \"J9pzIsEOVEZ74gjFtMkCj+5Po7s=\")), \"J9pzIsEOVEZ74gjFtMkCj+5Po7s=\")), \"J9pzIsEOVEZ74gjFtMkCj+5Po7s=\"); // Use useRef inside the component\n\n  useEffect(() => {\n    const circles = circlesRef.current;\n    circles.forEach((circle, index) => {\n      circle.x = 0;\n      circle.y = 0;\n      circle.style.backgroundColor = colors[index % colors.length];\n    });\n    const handleMouseMove = e => {\n      coords.x = e.clientX;\n      coords.y = e.clientY;\n    };\n    window.addEventListener(\"mousemove\", handleMouseMove);\n    const animateCircles = () => {\n      let x = coords.x;\n      let y = coords.y;\n      circles.forEach((circle, index) => {\n        circle.style.left = x - 12 + \"px\";\n        circle.style.top = y - 12 + \"px\";\n        circle.style.transform = `scale(${(circles.length - index) / circles.length})`;\n        circle.x = x;\n        circle.y = y;\n        const nextCircle = circles[index + 1] || circles[0];\n        x += (nextCircle.x - x) * 0.3;\n        y += (nextCircle.y - y) * 0.3;\n      });\n      requestAnimationFrame(animateCircles);\n    };\n    animateCircles();\n    return () => {\n      window.removeEventListener(\"mousemove\", handleMouseMove);\n    };\n  }, [colors, coords]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: colors.map((color, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"circle\",\n      ref: circlesRef.current[index]\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s2(Cursor, \"N1g70dKFpJP3L8xc0ZFHuHcTJ30=\");\n_c = Cursor;\nexport default Cursor;\nvar _c;\n$RefreshReg$(_c, \"Cursor\");","map":{"version":3,"names":["React","useEffect","useRef","useMemo","jsxDEV","_jsxDEV","Cursor","_s2","_s","$RefreshSig$","coords","x","y","colors","circlesRef","map","circles","current","forEach","circle","index","style","backgroundColor","length","handleMouseMove","e","clientX","clientY","window","addEventListener","animateCircles","left","top","transform","nextCircle","requestAnimationFrame","removeEventListener","children","color","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Development/Portfolio/parvesh-portfolio/src/components/cursor/Cursor.jsx"],"sourcesContent":["import React, { useEffect, useRef, useMemo } from 'react';\r\nimport './Cursor.css';\r\n\r\nconst Cursor = () => {\r\n  const coords = useMemo(() => ({ x: 0, y: 0 }), []); // Memoize the initialization of 'coords'\r\n  \r\n  const colors = useMemo(() => [\r\n    \"#7c7979\", \"#7c7979\", \"#7c7979\", \"#7c7979\", \"#7c7979\", \"#7c7979\", \"#7c7979\",\r\n    \"#7c7979\", \"#7c7979\", \"#7c7979\", \"#7c7979\", \"#7c7979\", \"#7c7979\", \"#7c7979\",\r\n    \"#7c7979\", \"#7c7979\", \"#7c7979\", \"#7c7979\", \"#7c7979\", \"#7c7979\", \"#7c7979\", \"#7c7979\"\r\n  ], []); // Memoize the initialization of 'colors'\r\n\r\n  const circlesRef = useRef(colors.map(() => useRef(null))); // Use useRef inside the component\r\n\r\n  useEffect(() => {\r\n    const circles = circlesRef.current;\r\n\r\n    circles.forEach((circle, index) => {\r\n      circle.x = 0;\r\n      circle.y = 0;\r\n      circle.style.backgroundColor = colors[index % colors.length];\r\n    });\r\n\r\n    const handleMouseMove = (e) => {\r\n      coords.x = e.clientX;\r\n      coords.y = e.clientY;\r\n    };\r\n\r\n    window.addEventListener(\"mousemove\", handleMouseMove);\r\n\r\n    const animateCircles = () => {\r\n      let x = coords.x;\r\n      let y = coords.y;\r\n\r\n      circles.forEach((circle, index) => {\r\n        circle.style.left = x - 12 + \"px\";\r\n        circle.style.top = y - 12 + \"px\";\r\n\r\n        circle.style.transform = `scale(${(circles.length - index) / circles.length})`;\r\n\r\n        circle.x = x;\r\n        circle.y = y;\r\n\r\n        const nextCircle = circles[index + 1] || circles[0];\r\n        x += (nextCircle.x - x) * 0.3;\r\n        y += (nextCircle.y - y) * 0.3;\r\n      });\r\n\r\n      requestAnimationFrame(animateCircles);\r\n    };\r\n\r\n    animateCircles();\r\n\r\n    return () => {\r\n      window.removeEventListener(\"mousemove\", handleMouseMove);\r\n    };\r\n  }, [colors, coords]);\r\n\r\n  return (\r\n    <div>\r\n      {colors.map((color, index) => (\r\n        <div\r\n          key={index}\r\n          className=\"circle\"\r\n          ref={circlesRef.current[index]}\r\n        ></div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cursor;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}